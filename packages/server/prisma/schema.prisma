// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Config Aplicativos
model Programas {
  id    Int     @default(autoincrement()) @id
  nome  String
  Telas Telas[]
}

model Telas {
  id                     Int                      @default(autoincrement()) @id
  idProgramas            Int
  nome                   String
  tipo                   Int
  rota                   String
  Programas              Programas                @relation(fields: [idProgramas])
  AcessoGrupoPermissao   AcessoGrupoPermissao[]
  AcessoUsuarioPermissao AcessoUsuarioPermissao[]
}

// Config Autenticação
model Usuario {
  id                     Int                      @default(autoincrement()) @id
  email                  String                   @unique
  nome                   String?
  usuario                String                   @unique
  senha                  String
  idPessoa               Int?
  GrupoPermissao         GrupoPermissao[]         @relation("UsuarioGrupoPermissao")
  Pessoa                 Pessoa?                  @relation(fields: [idPessoa])
  Tarefas                Tarefas[]
  Revisor                Tarefas[]                @relation("Revisor")
  Atribuido              Tarefas[]                @relation("Atribuido")
  AcessoUsuarioPermissao AcessoUsuarioPermissao[]
}

model GrupoPermissao {
  id                   Int                    @default(autoincrement()) @id
  nome                 String
  AcessoGrupoPermissao AcessoGrupoPermissao[]
  Usuario              Usuario[]              @relation("UsuarioGrupoPermissao")
}

model AcessoGrupoPermissao {
  id               Int            @default(autoincrement()) @id
  idTelas          Int
  idGrupoPermissao Int
  isMenu           Boolean?       @default(false)
  isAcesso         Boolean?       @default(false)
  isSalvar         Boolean?       @default(false)
  isEditar         Boolean?       @default(false)
  isDeletar        Boolean?       @default(false)
  Telas            Telas          @relation(fields: [idTelas])
  GrupoPermissao   GrupoPermissao @relation(fields: [idGrupoPermissao])
}

model AcessoUsuarioPermissao {
  id        Int     @default(autoincrement()) @id
  idTelas   Int
  idUsuario Int
  isMenu    Boolean
  isAcesso  Boolean
  isSalvar  Boolean
  isEditar  Boolean
  isDeletar Boolean
  Telas     Telas   @relation(fields: [idTelas])
  Usuario   Usuario @relation(fields: [idUsuario])
}

// Geral
model Pessoa {
  id         Int       @default(autoincrement()) @id
  idFisica   Int
  idJuridica Int
  idEndereco Int
  Fisica     Fisica    @relation(fields: [idFisica])
  Juridica   Juridica  @relation(fields: [idJuridica])
  Endereco   Endereco  @relation(fields: [idEndereco])
  Usuario    Usuario[]
}

model Fisica {
  id          Int      @default(autoincrement()) @id
  nome        String
  cpf         String
  aniversario DateTime
  mae         String
  Pessoa      Pessoa[]
}

model Juridica {
  id       Int      @default(autoincrement()) @id
  nome     String
  cnpj     String
  fantasia String?
  Pessoa   Pessoa[]
}

model Endereco {
  id     Int      @default(autoincrement()) @id
  cep    String
  rua    String
  bairro String
  cidade String
  estado String
  Pessoa Pessoa[]
}

// App HelpDesk
model Tarefas {
  id               Int            @default(autoincrement()) @id
  autor            Int
  abertura         DateTime       @default(now())
  classe           Int // Chamado, Problema, Mudança
  tipo             Int? // Requisição, Incidente
  estado           Int?
  prioridade       Int?
  titulo           String
  descricao        String?
  RelacionadoPai   Tarefas[]      @relation("TarefasRelacionadas")
  RelacionadoFilho Tarefas[]      @relation("TarefasRelacionadas")
  Autor            Usuario        @relation(fields: [autor])
  Atribuido        Usuario[]      @relation("Atribuido")
  Etiquetas        Categorias[]   @relation("Etiquetas")
  Revisor          Usuario[]      @relation("Revisor")
  Checklist        Checklist[]
  CartaoColuna     CartaoColuna[]
}

model Categorias {
  id             Int          @default(autoincrement()) @id
  tipo           Int
  nome           String
  descricao      String?
  categoriaPai   Int?
  CategoriaPai   Categorias?  @relation("CategoriaPai", fields: [categoriaPai], references: [id])
  CategoriaFilho Categorias[] @relation("CategoriaPai")
  Tarefas        Tarefas[]    @relation("Etiquetas")
}

model Checklist {
  id            Int             @default(autoincrement()) @id
  idTarefas     Int
  titulo        String
  descricao     String?
  Tarefas       Tarefas         @relation(fields: [idTarefas])
  ChecklistItem ChecklistItem[]
}

model ChecklistItem {
  id          Int       @default(autoincrement()) @id
  idChecklist Int
  Checklist   Checklist @relation(fields: [idChecklist])
  nome        String
  descricao   String?
  isFechado   Boolean   @default(false)
}

// App Kanban
model Quadro {
  id        Int     @default(autoincrement()) @id
  nome      String
  descricao String?
}

model ColunaQuadro {
  id           Int            @default(autoincrement()) @id
  idQuadro     Int
  nome         String
  descricao    String
  CartaoColuna CartaoColuna[]
}

model CartaoColuna {
  id             Int          @default(autoincrement()) @id
  idColunaQuadro Int
  idTarefas      Int?
  titulo         String?
  descricao      String?
  Tarefas        Tarefas?     @relation(fields: [idTarefas])
  ColunaQuadro   ColunaQuadro @relation(fields: [idColunaQuadro])
}
